C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN 12864.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE 12864.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "../sameShit.h"
   2          /*********************************************************************************************************
             -*************************************************************/
   3          //³ÌÐòËµÃ÷£º±¾³ÌÐòÎª12864£¨st7920£©Çý¶¯³ÌÐò£¬Ö»ÊµÏÖÁË×î¼òµ¥µÄÏÔÊ¾¹¦ÄÜ
   4          //¶Ë¿ÚÉèÖÃ£ºRS¡¢RW¡¢EN·Ö±ðÎªP0¿ÚµÄ0¡¢1¡¢2£¬Êý¾Ý¿ÚÎªP2¿ÚÓÃÈ¡Ä£Èí¼þÈ¡µÄÍ¼ÐÎ»òºº×Ö±ØÐëÊÇÖðÐÐÈ¡µÄ£¬ÒòÎª±¾º¯ÊýÊ
             -ÇÔÚÒº¾§ÉÏÖðÐÐ´òµãµÄ
   5          /*********************************************************************************************************
             -**********************************************/
   6          #include<stdlib.h>      //ÄÚº¬rand£¨£©º¯Êý
   7          
   8          //**********ºê¶¨ÒåËùÐèÖ¸Áî
   9          #define BASIC_SET  0x30
  10          #define EXTEND_SET 0x34
  11          #define DRAW_ON    0x36
  12          #define DRAW_OFF   0x34
  13          
  14          //*************¶Ë¿Ú¶¨Òå
  15          sbit LCD_RS = P0^0;
  16          sbit LCD_RW = P0^1;
  17          sbit LCD_EN = P0^2;
  18          
  19          //************±äÁ¿¶¨Òå
  20          //uchar dis1[10];
  21          
  22          
  23          //****************¶ÌÑÓÊ±
  24          void delay(uint k)
  25          {
  26   1              uint i;
  27   1              uchar j;
  28   1              for(i = 0; i < k ;i ++)
  29   1                      for(j = 0; j < 10 ;j ++);
  30   1      }
  31          
  32          
  33          //***********ms¼¶ÑÓÊ±º¯Êý
  34          /*void delay_1ms(uint x)
  35          {
  36                  uint i,j;
  37                  for(j = 0;j < x; j++)
  38                          for(i = 0;i < 110; i++);
  39          } */
  40          
  41          
  42          //***********12864Ð´Ö¸Áîº¯Êý
  43          void write_com(uchar cmd)
  44          {
  45   1              LCD_RS = 0;
  46   1              LCD_RW = 0;
  47   1              P2 = cmd;
  48   1              delay(5);
  49   1              LCD_EN = 1;
  50   1              delay(5);
  51   1              LCD_EN = 0;
  52   1      }
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 2   

  53          
  54          
  55          //********12864Ð´Êý¾Ýº¯Êý
  56          void write_dat(uchar dat)
  57          {
  58   1              LCD_RS = 1;              
  59   1              LCD_RW = 0;
  60   1              P2 = dat;
  61   1              delay(5);
  62   1              LCD_EN = 1;
  63   1              delay(5);
  64   1              LCD_EN = 0;
  65   1      }
  66          
  67          
  68          //****************´ÓLCDÖÐ¶ÁÊý¾Ý
  69          uchar read_dat(void)
  70          {
  71   1              uchar temp;
  72   1              P2 = 0XFF;      //ÊÍ·ÅÊý¾ÝÏß
  73   1              LCD_RS = 1;        //Êý¾Ý
  74   1              LCD_RW = 1;       // ¶ÁÄ£Ê½
  75   1              LCD_EN = 1;    //EÎª¸ßµçÆ½½øÐÐ¶ÁÊý¾Ý»òÖ¸Áî
  76   1              delay(1);
  77   1              temp = P2;
  78   1              LCD_EN = 0;
  79   1              return temp; 
  80   1      }
  81          
  82          
  83          //********************************************************
  84          //ÉèÖÃ¹â±ê£¨µØÖ·£©º¯Êý
  85          //²ÎÊýËµÃ÷£ºx---ÎªÐÐºÅ£¬yÎªÁÐºÅ
  86          //********************************************************
  87          void set_cursor(unsigned char x, unsigned char y)
  88          {
  89   1              unsigned char i;
  90   1              switch(x)                                                               //È·¶¨ÐÐºÅ
  91   1              {
  92   2                      case 0x00: i=0x80; break;                               //µÚÒ»ÐÐ
  93   2                      case 0x01: i=0x90; break;                               //µÚ¶þÐÐ
  94   2                      case 0x02: i=0x88; break;                               //µÚÈýÐÐ
  95   2                      case 0x03: i=0x98; break;                               //µÚËÄÐÐ
  96   2                      default : break;
  97   2              }
  98   1              i = y+i;                                                                        //È·¶¨ÁÐºÅ
  99   1              write_com(i);
 100   1      }
 101          
 102          
 103          
 104          //********************************************************
 105          //ÏÔÊ¾×Ö·ûº¯Êý
 106          //********************************************************
 107          void display_char(unsigned char Alphabet)
 108          {
 109   1              write_dat(Alphabet);                    //Ð´ÈëÐèÒªÏÔÊ¾×Ö·ûµÄÏÔÊ¾Âë
 110   1      }
 111          
 112          
 113          
 114          //********************************************************
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 3   

 115          //Ö¸¶¨Î»ÖÃÏÔÊ¾×Ö·û´®º¯Êý
 116          //²ÎÊýËµÃ÷£ºxÎªÐÐºÅ£¬yÎªÁÐºÅ
 117          //********************************************************
 118          void display_string(unsigned char x,unsigned char y,unsigned char *Alphabet)
 119          {
 120   1              unsigned char i=0;
 121   1              set_cursor(x,y);                                //ÉèÖÃÏÔÊ¾µÄÆðÊ¼µØÖ·
 122   1              while(Alphabet[i]!='\0')
 123   1              {
 124   2                      write_dat(Alphabet[i]);                 //Ð´ÈëÐèÒªÏÔÊ¾×Ö·ûµÄÏÔÊ¾Âë
 125   2                      i++;
 126   2              }
 127   1      }
 128          
 129          
 130          
 131          
 132          
 133          //***************************************************************************ÒÔÏÂÎªGDRAM»æÍ¼²¿·Ö**********
             -**************************************************************//
 134          
 135          //*********************»æÍ¼ÏÔÊ¾µÄÇåÆÁº¯Êý£¨ÒòÇåÆÁÖ¸ÁîÔÚ»­Í¼Ê±²»ÄÜÓÃ£©-------------------------------------
             ------------------------------------------×¢Òâ£¡£¡£¡£¡£¡£¡£¡
 136          void gui_clear()
 137          {
 138   1              uchar i , j , k;
 139   1              write_com(EXTEND_SET);//À©Õ¹Ö¸Áî¼¯£¬8Î»Êý¾Ý´«Êä
 140   1              write_com(DRAW_OFF);//»æÍ¼ÏÔÊ¾¹Ø±Õ
 141   1              for(i = 0; i < 2; i ++)//·ÖÉÏÏÂÁ½ÆÁÐ´
 142   1              {
 143   2                      for(j = 0; j < 32; j ++)
 144   2                      {
 145   3                              write_com(0x80 + j);//Ð´y×ø±ê
 146   3                              delay(1);
 147   3                              if(i == 0) //Ð´x×ø±ê
 148   3                              {
 149   4                                      write_com(0x80);
 150   4                                      delay(1);
 151   4                              }
 152   3                              else      //Ð´ÏÂ°ëÆÁ
 153   3                              {
 154   4                                      write_com(0x88);
 155   4                                      delay(1);
 156   4                              }
 157   3                              for(k = 0; k < 16; k ++)//Ð´Ò»ÕûÐÐÊý¾Ý
 158   3                              {
 159   4                                      write_dat(0x00);//Ð´¸ß×Ö½Ú
 160   4                                      write_dat(0x00);//Ð´µÍ×Ö½Ú
 161   4                                      delay(1);
 162   4                              }
 163   3                      }
 164   2              }
 165   1              write_com(DRAW_ON);//´ò¿ª»æÍ¼ÏÔÊ¾
 166   1              write_com(BASIC_SET);//´ò¿ª»ù±¾Ö¸Áî¼¯
 167   1      }
 168          
 169          
 170          
 171          //*************************************************************************************************
 172          //***************ÓÐ·´°×ÏÔÊ¾¹¦ÄÜµÄ´òµãº¯Êý**********************************************************
 173          //²ÎÊý£ºcolor=1£¬¸ÃµãÌî³ä1£»color=0£¬¸ÃµãÌî³ä°×É«0£»
 174          //*************************************************************************************************
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 4   

 175          void GUI_Point(unsigned char x,unsigned char y,unsigned char color)
 176          {     
 177   1              unsigned char x_Dyte,x_byte;                            //¶¨ÒåÁÐµØÖ·µÄ×Ö½ÚÎ»£¬¼°ÔÚ×Ö½ÚÖÐµÄÄÄ1Î» 
 178   1              unsigned char y_Dyte,y_byte;                            //¶¨ÒåÎªÉÏÏÂÁ½¸öÆÁ(È¡ÖµÎª0£¬1)£¬ÐÐµØÖ·(È¡ÖµÎª0~31)
 179   1              unsigned char GDRAM_hbit,GDRAM_lbit;
 180   1              
 181   1              write_com(0x36);                                                                //À©Õ¹Ö¸ÁîÃüÁî
 182   1              /***X,Y×ø±ê»¥»»£¬¼´ÆÕÍ¨µÄX,Y×ø±ê***/
 183   1              x_Dyte=x/16;                                                            //¼ÆËãÔÚ16¸ö×Ö½ÚÖÐµÄÄÄÒ»¸ö
 184   1              x_byte=x&0x0f;                                                          //¼ÆËãÔÚ¸Ã×Ö½ÚÖÐµÄÄÄÒ»Î»
 185   1              y_Dyte=y/32;                                                            //0ÎªÉÏ°ëÆÁ£¬1ÎªÏÂ°ëÆÁ
 186   1              y_byte=y&0x1f;                                                          //¼ÆËãÔÚ0~31µ±ÖÐµÄÄÄÒ»ÐÐ
 187   1        
 188   1              write_com(0x80+y_byte);                                         //Éè¶¨ÐÐµØÖ·(y×ø±ê),¼´ÊÇ´¹Ö±µØÖ·
 189   1              write_com(0x80+x_Dyte+8*y_Dyte);                                //Éè¶¨ÁÐµØÖ·(x×ø±ê)£¬²¢Í¨¹ý8*y_DyteÑ¡¶¨ÉÏÏÂÆÁ£¬¼´ÊÇË®Æ½µØÖ·
 190   1          
 191   1              read_dat();                                                                     //Ô¤¶ÁÈ¡Êý¾Ý
 192   1              GDRAM_hbit= read_dat();                                         //¶ÁÈ¡µ±Ç°ÏÔÊ¾¸ß8Î»Êý¾Ý
 193   1              GDRAM_lbit= read_dat();                                         //¶ÁÈ¡µ±Ç°ÏÔÊ¾µÍ8Î»Êý¾Ý
 194   1              delay(1);
 195   1        
 196   1              write_com(0x80+y_byte);                                         //Éè¶¨ÐÐµØÖ·(y×ø±ê)
 197   1              write_com(0x80+x_Dyte+8*y_Dyte);                                //Éè¶¨ÁÐµØÖ·(x×ø±ê)£¬²¢Í¨¹ý8*y_DyteÑ¡¶¨ÉÏÏÂÆÁ
 198   1              delay(1);
 199   1              
 200   1              if(x_byte<8)                                                                            //ÅÐ¶ÏÆäÔÚ¸ß8Î»£¬»¹ÊÇÔÚµÍ8Î»
 201   1              {
 202   2                      if(color==1)
 203   2                      {
 204   3                              write_dat(GDRAM_hbit|(0x01<<(7-x_byte)));       //ÖÃÎ»GDRAMÇø¸ß8Î»Êý¾ÝÖÐÏàÓ¦µÄµã
 205   3                      }
 206   2                      else 
 207   2                              write_dat(GDRAM_hbit&(~(0x01<<(7-x_byte))));    //Çå³ýGDRAMÇø¸ß8Î»Êý¾ÝÖÐÏàÓ¦µÄµã        
 208   2      
 209   2                      write_dat(GDRAM_lbit);                                                  //ÏÔÊ¾GDRAMÇøµÍ8Î»Êý¾Ý 
 210   2              }
 211   1              else
 212   1              {
 213   2                      write_dat(GDRAM_hbit);
 214   2                      if(color==1)
 215   2                              write_dat(GDRAM_lbit|(0x01<<(15-x_byte)));      //ÖÃÎ»GDRAMÇø¸ß8Î»Êý¾ÝÖÐÏàÓ¦µÄµã
 216   2                      else 
 217   2                              write_dat(GDRAM_lbit&(~(0x01<<(15-x_byte))));//Çå³ýGDRAMÇø¸ß8Î»Êý¾ÝÖÐÏàÓ¦µÄµã   
 218   2              } 
 219   1              write_com(0x30);                                                                                //»Ö¸´µ½»ù±¾Ö¸Áî¼¯
 220   1      }
 221          
 222          
 223          
 224          //***********£¨¸ø¶¨×ø±ê²¢´òµãµÄ£©ÈÎÒâÎ»ÖÃ´òµãº¯Êý
 225          void lcd_set_dot(uchar x,uchar y)
 226          {
 227   1              uchar x_byte,x_bit;//È·¶¨ÔÚ×ø±êµÄÄÇÒ»×Ö½ÚÄÄÒ»Î»
 228   1              uchar y_ping , y_bit;//È·¶¨ÔÚ×ø±êµÄÄÄÒ»ÆÁÄÄÒ»ÐÐ
 229   1              uchar tmph , tmpl;//¶¨ÒåÁ½¸öÁÙÊ±±äÁ¿£¬ÓÃÓÚ´æ·Å¶Á³öÀ´µÄÊý¾Ý
 230   1              write_com(EXTEND_SET);//À©Õ¹Ö¸Áî¼¯
 231   1              write_com(DRAW_OFF);//»æÍ¼ÏÔÊ¾¹Ø±Õ
 232   1              x_byte = x / 16;//Ëã³öÔÚÄÄÒ»×Ö½Ú£¬×¢ÒâÒ»¸öµØÖ·ÊÇ16Î»µÄ
 233   1              x_bit = x % 16;//& 0x0f;//Ëã³öÔÚÄÄÒ»Î»
 234   1              y_ping = y / 32;//È·¶¨ÔÚÉÏ°ëÆÁ»¹ÊÇÏÂ°ëÆÁ£¬0´ú±íÉÏ°ëÆÁ£¬1´ú±íÏÂ°ëÆÁ
 235   1              y_bit = y % 32;//& 0x1f;//È·¶¨ÔÚµÚ¼¸ÐÐ
 236   1      
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 5   

 237   1              write_com(0X80 + y_bit);//ÏÈÐ´´¹Ö±µØÖ·£¨×î¸ßÎ»±ØÐë£©
 238   1              write_com(0x80 + x_byte + 8 * y_ping);//Ë®Æ½×ø±ê£¬ÏÂ°ëÆÁ×ø±êÆðÊ¼µØÖ·Îª0x88£¬£¨+8*y_ping£©¾ÍÊÇÓÃÀ´È·¶¨ÉÏ°ë
             -ÆÁ»¹ÊÇÏÂ°ëÆÁ
 239   1              read_dat();//Ô¤¶ÁÈ¡Êý¾Ý
 240   1              tmph = read_dat();//¶ÁÈ¡µ±Ç°ÏÔÊ¾¸ß8Î»Êý¾Ý
 241   1              tmpl = read_dat();//¶ÁÈ¡µ±Ç°ÏÔÊ¾µÍ8Î»Êý¾Ý
 242   1              delay(1);
 243   1              write_com(0x80 + y_bit);//¶Á²Ù×÷»á¸Ä±äAC£¬ËùÒÔÖØÐÂÉèÖÃÒ»ÏÂ
 244   1              write_com(0x80 + x_byte + 8 * y_ping);
 245   1              delay(1);
 246   1              if(x_bit < 8)
 247   1              {
 248   2                      write_dat(tmph | (0x01 << (7 - x_bit)));//Ð´¸ß×Ö½Ú£¬ÒòÎª×ø±êÊÇ´Ó×óÏòÓÒµÄ£¬GDRAM¸ßÎ»ÔÚ×ò£¬µÍÎ»ÔÚÓÒ
 249   2                      write_dat(tmpl);//Ô­µÍÎ»Êý¾ÝËÍ»Ø
 250   2              }
 251   1              else
 252   1              {
 253   2                      write_dat(tmph);//Ô­¸ßÎ»Êý¾ÝËÍ»Ø
 254   2                      write_dat(tmpl | (0x01 << (15 - x_bit)));
 255   2              }
 256   1              write_com(DRAW_ON);     //´ò¿ª»æÍ¼ÏÔÊ¾
 257   1              write_com(BASIC_SET);//»Øµ½»ù±¾Ö¸Áî¼¯
 258   1      }
 259          
 260          
 261          
 262          //************»­Ë®Æ½Ïßº¯Êý**********************************//
 263          //x0¡¢x1ÎªÆðÊ¼µãºÍÖÕµãµÄË®Æ½×ø±ê£¬yÎª´¹Ö±×ø±ê***************//
 264          //**********************************************************//
 265          void gui_hline(uchar x0, uchar x1, uchar y)
 266          {
 267   1              uchar bak;//ÓÃÓÚ¶ÔÁ½¸öÊý»¥»»µÄÖÐ¼ä±äÁ¿£¬Ê¹x1Îª´óÖµ
 268   1              if(x0 > x1)
 269   1              {
 270   2                      bak = x1;
 271   2                      x1 = x0;
 272   2                      x0 = bak;
 273   2              }
 274   1      
 275   1              do
 276   1              {
 277   2                      lcd_set_dot(x0 , y);//´Ó×óµ½ÓÒÖðµãÏÔÊ¾
 278   2                      x0 ++;  
 279   2              }while(x1 >= x0);
 280   1      }
 281          
 282          
 283          //***********»­ÊúÖ±Ïßº¯Êý***********************************//
 284          //xÎªÆðÊ¼µãºÍÖÕµãµÄË®Æ½×ø±ê£¬y0¡¢y1Îª´¹Ö±×ø±ê***************//
 285          //**********************************************************//
 286          void gui_rline(uchar x, uchar y0, uchar y1)
 287          {
 288   1              uchar bak;//ÓÃÓÚ¶ÔÁ½¸öÊý»¥»»µÄÖÐ¼ä±äÁ¿£¬Ê¹y1Îª´óÖµ
 289   1              if(y0 > y1)
 290   1              {
 291   2                      bak = y1;
 292   2                      y1 = y0;
 293   2                      y0 = bak;
 294   2              }
 295   1      
 296   1              do
 297   1              {
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 6   

 298   2                      lcd_set_dot(x , y0);//´ÓÉÏµ½ÏÂÖðµãÏÔÊ¾
 299   2                      y0 ++;  
 300   2              }while(y1 >= y0);
 301   1      }
 302          
 303          
 304          
 305          //*********ÈÎÒâÁ½µã¼ä»­Ö±Ïß*********************************//
 306          //x0¡¢y0ÎªÆðÊ¼µã×ø±ê£¬x1¡¢y1ÎªÖÕµã×ø±ê**********************//
 307          //**********************************************************//
 308          void gui_line(uchar x0 , uchar y0 , uchar x1 , uchar y1)
 309          {
 310   1              char dx;//Ö±ÏßxÖá²îÖµ
 311   1              char dy;//Ö±ÏßyÖá²îÖµ
 312   1              char dx_sym;//xÖáÔö³¤·½Ïò£¬Îª-1Ê±¼õÖµ·½Ïò£¬Îª1Ê±ÔöÖµ·½Ïò
 313   1              char dy_sym;//yÖáÔö³¤·½Ïò£¬Îª-1Ê±¼õÖµ·½Ïò£¬Îª1Ê±ÔöÖµ·½Ïò
 314   1              char dx_x2;//dx*2Öµ±äÁ¿£¬ÓÃÓÚ¼Ó¿ìÔËËãËÙ¶È
 315   1              char dy_x2;//dy*2Öµ±äÁ¿£¬ÓÃÓÚ¼Ó¿ìÔËËãËÙ¶È
 316   1              char di;   //¾ö²ß±äÁ¿
 317   1      
 318   1              if(x0 == x1)//ÅÐ¶ÏÊÇ·ñÎª´¹Ö±Ïß
 319   1              {
 320   2                      gui_rline(x0 , y0 , y1);//»­´¹Ö±Ïß
 321   2                      return;
 322   2              }
 323   1              if(y0 == y1)//ÅÐ¶ÏÊÇ·ñÎªË®Æ½Ïß
 324   1              {
 325   2                      gui_hline(x0 , x1 , y0);//»­Ë®Æ½Ïß
 326   2                      return;
 327   2              }
 328   1      
 329   1              dx = x1 - x0;//ÇóÈ¡Á½µãÖ®¼äµÄ²îÖµ
 330   1              dy = y1 - y0;
 331   1      
 332   1              //****ÅÐ¶ÏÔö³¤·½Ïò£¬»òÊÇ·ñÎªË®Æ½Ïß¡¢´¹Ö±Ïß¡¢µã*//
 333   1              if(dx > 0)//ÅÐ¶ÏxÖá·½Ïò
 334   1                      dx_sym = 1;
 335   1              else
 336   1              {
 337   2                      if(dx < 0)
 338   2                              dx_sym = -1;
 339   2                      else
 340   2                      {
 341   3                              gui_rline(x0 , y0 , y1);
 342   3                              return;
 343   3                      }
 344   2              }
 345   1      
 346   1              if(dy > 0)//ÅÐ¶ÏyÖá·½Ïò
 347   1                      dy_sym = 1;
 348   1              else
 349   1              {
 350   2                      if(dy < 0)
 351   2                              dy_sym = -1;
 352   2                      else
 353   2                      {
 354   3                              gui_hline(x0 , x1 , y0);
 355   3                              return;
 356   3                      }
 357   2              }
 358   1      
 359   1      
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 7   

 360   1              /*½«dx¡¢dyÈ¡¾ø¶ÔÖµ***********/
 361   1              dx = dx_sym * dx;
 362   1              dy = dy_sym * dy;
 363   1      
 364   1              /****¼ÆËã2±¶µÄdx¡¢dyÖµ*******/
 365   1              dx_x2 = dx * 1;//ÎÒ¸ÄÎªÁËÒ»±¶£¬ÕâÑù²Å¸úÕæÊµµÄÁ½µã¶ÔÓ¦
 366   1              dy_x2 = dy * 1;
 367   1      
 368   1              /***Ê¹ÓÃbresenham·¨½øÐÐ»­Ö±Ïß***/
 369   1              if(dx >= dy)//¶ÔÓÚdx>=dy£¬Ê¹ÓÃxÖáÎª»ù×¼
 370   1              {
 371   2                      di = dy_x2 - dx;
 372   2                      while(x0 != x1)
 373   2                      {
 374   3                              lcd_set_dot(x0,y0);
 375   3                              x0 +=dx_sym;
 376   3                              if(di < 0)
 377   3                                      di += dy_x2;//¼ÆËã³öÏÂÒ»²½µÄ¾ö²ßÖµ
 378   3                              else
 379   3                              {
 380   4                                      di += dy_x2 - dx_x2;
 381   4                                      y0 += dy_sym;
 382   4                              }       
 383   3                      }
 384   2                      lcd_set_dot(x0, y0);//ÏÔÊ¾×îºóÒ»µã
 385   2              }
 386   1              else  //¶ÔÓÚdx<dyÊ¹ÓÃyÖáÎª»ù×¼
 387   1              {
 388   2                      di = dx_x2 - dy;
 389   2                      while(y0 != y1)
 390   2                      {
 391   3                              lcd_set_dot(x0, y0);
 392   3                              y0 += dy_sym;
 393   3                              if(di < 0)
 394   3                                      di += dx_x2;
 395   3                              else
 396   3                              {
 397   4                                      di += dx_x2 - dy_x2;
 398   4                                      x0 += dx_sym;
 399   4                              }
 400   3                      }
 401   2                      lcd_set_dot(x0, y0);//ÏÔÊ¾×îºóÒ»µã
 402   2              }
 403   1      }
 404          
 405          
 406          
 407          //***************************************************************************//
 408          //*******************»­Ö¸¶¨¿í¶ÈµÄÈÎÒâÁ½µãÖ®¼äµÄÖ±Ïß**************************//
 409          //²ÎÊýËµÃ÷£ºx0¡¢y0ÎªÆðÊ¼µã×ø±ê£¬x1¡¢y1ÎªÖÕµã×ø±ê£¬withÎªÏß¿í*****************//
 410          //***************************************************************************//
 411          void gui_linewith(uchar x0 , uchar y0 , uchar x1 , uchar y1 , uchar with)
 412          {  
 413   1              char    dx;                                             // Ö±ÏßxÖá²îÖµ±äÁ¿
 414   1              char    dy;                             // Ö±ÏßyÖá²îÖµ±äÁ¿
 415   1              char    dx_sym;                                 // xÖáÔö³¤·½Ïò£¬Îª-1Ê±¼õÖµ·½Ïò£¬Îª1Ê±ÔöÖµ·½Ïò
 416   1              char    dy_sym;                                 // yÖáÔö³¤·½Ïò£¬Îª-1Ê±¼õÖµ·½Ïò£¬Îª1Ê±ÔöÖµ·½Ïò
 417   1              char    dx_x2;                                  // dx*2Öµ±äÁ¿£¬ÓÃÓÚ¼Ó¿ìÔËËãËÙ¶È
 418   1              char    dy_x2;                                  // dy*2Öµ±äÁ¿£¬ÓÃÓÚ¼Ó¿ìÔËËãËÙ¶È
 419   1              char    di;                                             // ¾ö²ß±äÁ¿
 420   1         
 421   1              char   wx, wy;                                  // Ïß¿í±äÁ¿
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 8   

 422   1              char   draw_a, draw_b;
 423   1         
 424   1              // ²ÎÊý¹ýÂË
 425   1              if(with==0) return;
 426   1              if(with>50) with = 50;
 427   1         
 428   1              dx = x1-x0;                                                             // ÇóÈ¡Á½µãÖ®¼äµÄ²îÖµ
 429   1              dy = y1-y0;
 430   1         
 431   1              wx = with/2;
 432   1              wy = with-wx-1;
 433   1         
 434   1              //ÅÐ¶ÏÔö³¤·½Ïò£¬»òÊÇ·ñÎªË®Æ½Ïß¡¢´¹Ö±Ïß¡¢µã 
 435   1              if(dx>0)                                                                // ÅÐ¶ÏxÖá·½Ïò
 436   1              {  
 437   2                      dx_sym = 1;                                                     // dx>0£¬ÉèÖÃdx_sym=1
 438   2              }
 439   1              else
 440   1              {  
 441   2                      if(dx<0)
 442   2                      {  
 443   3                              dx_sym = -1;                                    // dx<0£¬ÉèÖÃdx_sym=-1
 444   3                      }
 445   2                      else
 446   2                      {  
 447   3                              //dx==0£¬»­´¹Ö±Ïß£¬»òÒ»µã
 448   3                              wx = x0-wx;
 449   3                              if(wx<0) wx = 0;
 450   3                              wy = x0+wy;
 451   3               
 452   3                              while(1)
 453   3                              {  
 454   4                                      x0 = wx;
 455   4                                      gui_rline(x0, y0, y1);
 456   4                                      if(wx>=wy) break;
 457   4                                      wx++;
 458   4                              }
 459   3                              return;
 460   3                      }
 461   2              }
 462   1         
 463   1              if(dy>0)                                                                // ÅÐ¶ÏyÖá·½Ïò
 464   1              {  
 465   2                      dy_sym = 1;                                                     // dy>0£¬ÉèÖÃdy_sym=1
 466   2              }
 467   1              else
 468   1              {  
 469   2                      if(dy<0)
 470   2                      {  
 471   3                              dy_sym = -1;                                    // dy<0£¬ÉèÖÃdy_sym=-1
 472   3                      }
 473   2                      else
 474   2                      {  
 475   3                              //dy==0£¬»­Ë®Æ½Ïß£¬»òÒ»µã
 476   3                              wx = y0-wx;
 477   3                              if(wx<0) wx = 0;
 478   3                              wy = y0+wy;
 479   3                              while(1)
 480   3                              {  
 481   4                                      y0 = wx;
 482   4                                      gui_hline(x0, x1, y1);
 483   4                                      if(wx>=wy) break;
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 9   

 484   4                                      wx++;
 485   4                              }
 486   3                              return;
 487   3                      }
 488   2              }
 489   1          
 490   1              // ½«dx¡¢dyÈ¡¾ø¶ÔÖµ
 491   1              dx = dx_sym * dx;
 492   1              dy = dy_sym * dy;
 493   1       
 494   1              //¼ÆËã2±¶µÄdx¼°dyÖµ
 495   1              dx_x2 = dx*2;
 496   1              dy_x2 = dy*2;
 497   1         
 498   1              //Ê¹ÓÃBresenham·¨½øÐÐ»­Ö±Ïß
 499   1              if(dx>=dy)                                                              // ¶ÔÓÚdx>=dy£¬ÔòÊ¹ÓÃxÖáÎª»ù×¼
 500   1              {  
 501   2                      di = dy_x2 - dx;
 502   2                      while(x0!=x1)
 503   2                      {  
 504   3                              //xÖáÏòÔö³¤£¬Ôò¿í¶ÈÔÚy·½Ïò£¬¼´»­´¹Ö±Ïß
 505   3                              draw_a = y0-wx;
 506   3                              if(draw_a<0) draw_a = 0;
 507   3                              draw_b = y0+wy;
 508   3                              gui_rline(x0, draw_a, draw_b);
 509   3                              x0 += dx_sym;                           
 510   3                              if(di<0)
 511   3                              {  
 512   4                                      di += dy_x2;                            // ¼ÆËã³öÏÂÒ»²½µÄ¾ö²ßÖµ
 513   4                              }
 514   3                              else
 515   3                              {  
 516   4                                      di += dy_x2 - dx_x2;
 517   4                                      y0 += dy_sym;
 518   4                              }
 519   3                      }
 520   2                      draw_a = y0-wx;
 521   2                      if(draw_a<0) draw_a = 0;
 522   2                      draw_b = y0+wy;
 523   2                      gui_rline(x0, draw_a, draw_b);
 524   2              }
 525   1              else                                                                    // ¶ÔÓÚdx<dy£¬ÔòÊ¹ÓÃyÖáÎª»ù×¼
 526   1              {  
 527   2                      di = dx_x2 - dy;
 528   2                      while(y0!=y1)
 529   2                      {  
 530   3                              //yÖáÏòÔö³¤£¬Ôò¿í¶ÈÔÚx·½Ïò£¬¼´»­Ë®Æ½Ïß
 531   3                              draw_a = x0-wx;
 532   3                              if(draw_a<0) draw_a = 0;
 533   3                              draw_b = x0+wy;
 534   3                              gui_hline(draw_a, y0, draw_b);
 535   3               
 536   3                              y0 += dy_sym;
 537   3                              if(di<0)
 538   3                              {  
 539   4                                      di += dx_x2;
 540   4                              }
 541   3                              else
 542   3                              {  
 543   4                                      di += dx_x2 - dy_x2;
 544   4                                      x0 += dx_sym;
 545   4                              }
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 10  

 546   3                      }
 547   2                      draw_a = x0-wx;
 548   2                      if(draw_a<0) draw_a = 0;
 549   2                      draw_b = x0+wy;
 550   2                      gui_hline(draw_a, y0, draw_b);
 551   2              } 
 552   1        
 553   1      }
 554          
 555          
 556          
 557          //***********»­¾ØÐÎº¯Êý*************************************//
 558          //x0¡¢y0Îª¾ØÐÎ×óÉÏ½Ç×ø±êÖµ£¬x1¡¢y1Îª¾ØÐÎÓÒÏÂ½Ç×ø±êÖµ********//
 559          //**********************************************************//
 560          void gui_rectangle(uchar x0 , uchar y0 , uchar x1 , uchar y1)
 561          {
 562   1              gui_hline(x0 , x1 , y0);
 563   1              gui_rline(x0 , y0 , y1);
 564   1              gui_rline(x1 , y0 , y1);
 565   1              gui_hline(x0 , x1 , y1);
 566   1      }
 567          
 568          
 569          
 570          //****************»­Ìî³ä¾ØÐÎº¯Êý****************************//
 571          //x0¡¢y0Îª¾ØÐÎ×óÉÏ½Ç×ø±êÖµ£¬x1¡¢y1Îª¾ØÐÎÓÒÏÂ½Ç×ø±êÖµ********//
 572          //**********************************************************//
 573          /*void gui_rectangle_fill(uchar x0 , uchar y0 , uchar x1 , uchar y1)
 574          {
 575                  uchar i;//×ª»»Êý¾ÝµÄÖÐ¼ä±äÁ¿,Ê¹x1¡¢y1´ó
 576                  if(x0 > x1)
 577                  {
 578                          i = x0;
 579                          x0 = x1;
 580                          x1 = i;
 581                  }
 582                  if(y0 > y1)
 583                  {
 584                          i = y0;
 585                          y0 = y1;
 586                          y1 = i;
 587                  }
 588                  //***ÅÐ¶ÏÊÇ·ñÊÇÖ±Ïß***/
 589          /*      if(y0 == y1)//»­Ë®Æ½Ïß
 590                  {
 591                          gui_hline(x0 , x1 , y0);
 592                          return;
 593                  }
 594                  if(x0 == x1)//»­ÊúÖ±Ïß
 595                  {
 596                          gui_rline(x0 , y0 , y1);
 597                          return;
 598                  }
 599          
 600                  while(y0 <= y1)//»­Ìî³ä¾ØÐÎ
 601                  {
 602                          gui_hline(x0 , x1 , y0);
 603                          y0 ++;
 604                  }
 605          } */
 606          
 607          
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 11  

 608          //*******************»­Õý·½ÐÎº¯Êý*************************//
 609          //x0¡¢y0ÎªÕý·½ÐÎ×óÉÏ½Ç×ø±ê£¬withÕý·½ÐÎ±ß³¤****************//
 610          //********************************************************//
 611          /*void gui_square(uchar x0 , uchar y0 , uchar with)
 612          {
 613                  if(with == 0)
 614                          return;
 615                  if((x0 + with) > 127)//ºáÖá³¬³öÒº¾§±ß½ç
 616                          return;
 617                  if((y0 + with) > 63)
 618                          return;
 619                  gui_rectangle(x0 , y0 , x0 + with , y0 + with);
 620          } */
 621          
 622          
 623          
 624          //****************»­Ìî³äÕý·½ÐÎº¯Êý*************************//
 625          //x0¡¢y0ÎªÕý·½ÐÎ×óÉÏ½Ç×ø±ê£¬withÕý·½ÐÎ±ß³¤*****************//
 626          //*********************************************************//
 627          /*void gui_square_fill(uchar x0 , uchar y0 , uchar with)
 628          {
 629                  if(with == 0)
 630                          return;
 631                  if((x0 + with) > 127)//ºáÖá³¬³öÒº¾§±ß½ç
 632                          return;
 633                  if((y0 + with) > 63)
 634                          return;
 635                  gui_rectangle_fill(x0 , y0 , x0 + with , y0 + with);    
 636          }       */
 637          
 638          
 639          
 640          //****************»­Ô²º¯Êý*********************************//
 641          //x0¡¢y0ÎªÔ²ÐÄ×ø±ê£¬rÎªÔ²µÄ°ë¾¶****************************//
 642          //*********************************************************//
 643          /*void gui_circle(uchar x0 , uchar y0 , uchar r)
 644          {
 645                  char a , b;
 646                  char di;
 647                  if(r > 31 || r == 0)//Ô²´óÓÚÒº¾§ÆÁ»òÕßÃ»°ë¾¶Ôò·µ»Ø
 648                          return;
 649                  a = 0;
 650                  b = r;
 651                  di = 3 - 2 * r;//ÅÐ¶ÏÏÂ¸öµãÎ»ÖÃµÄ±êÖ¾
 652                  while(a <= b)
 653                  {
 654                          lcd_set_dot( x0 - b , y0 - a);//3
 655                          lcd_set_dot( x0 + b , y0 - a); //0
 656                          lcd_set_dot( x0 - a , y0 + b);  //1
 657                          lcd_set_dot( x0 - b , y0 - a); //7
 658                          lcd_set_dot( x0 - a , y0 - b); //2
 659                          lcd_set_dot( x0 + b , y0 + a); //4
 660                          lcd_set_dot( x0 + a , y0 - b); //5
 661                          lcd_set_dot( x0 + a , y0 + b); //6
 662                          lcd_set_dot( x0 - b , y0 + a);
 663                          a ++;
 664                          //***Ê¹ÓÃbresenhamËã·¨»­Ô²********/
 665          /*              if(di < 0)
 666                                  di += 4 * a + 6;
 667                          else
 668                          {
 669                                  di += 10 + 4 * (a - b);
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 12  

 670                                  b --;
 671                          }       
 672                          lcd_set_dot( x0 + a , y0 + b);
 673                  }
 674          }       */
 675          
 676          
 677          
 678          //***************************************************************************//
 679          //***************************»­ÕýÍÖÔ²º¯Êý************************************//
 680          //ËµÃ÷£º¸ø¶¨ÍÖÔ²µÄËÄ¸öµãµÄ²ÎÊý£¬×î×ó¡¢×îÓÒµãµÄxÖá×ø±êÖµÎªx0¡¢x1£¬×îÉÏ¡¢×îÏÂµã
 681          //      µÄyÖá×ø±êÎªy0¡¢y1.
 682          //ËµÃ÷£º----------------------------ÏÔÊ¾Ð§¹û²»ºÃ
 683          //***************************************************************************//
 684          /*void gui_ellipse(char x0, char x1, char y0, char y1)
 685          {  
 686                  char  draw_x0, draw_y0;                 // ¹ôÍ¼µã×ø±ê±äÁ¿
 687                  char  draw_x1, draw_y1;
 688                  char  draw_x2, draw_y2;
 689                  char  draw_x3, draw_y3;
 690                  char  xx, yy;                                   // »­Í¼¿ØÖÆ±äÁ¿
 691              
 692                  char  center_x, center_y;               // ÍÖÔ²ÖÐÐÄµã×ø±ê±äÁ¿
 693                  char  radius_x, radius_y;               // ÍÖÔ²µÄ°ë¾¶£¬xÖá°ë¾¶ºÍyÖá°ë¾¶
 694                  int  radius_xx, radius_yy;              // °ë¾¶³ËÆ½·½Öµ
 695                  int  radius_xx2, radius_yy2;    // °ë¾¶³ËÆ½·½ÖµµÄÁ½±¶
 696                  char  di;                                               // ¶¨Òå¾ö²ß±äÁ¿
 697                  
 698             /* ²ÎÊý¹ýÂË */
 699          /*  if( (x0==x1) || (y0==y1) ) return; */
 700                  
 701             /* ¼ÆËã³öÍÖÔ²ÖÐÐÄµã×ø±ê */
 702           /*  center_x = (x0 + x1) >> 1;                 
 703             center_y = (y0 + y1) >> 1;                    */
 704             
 705             /* ¼ÆËã³öÍÖÔ²µÄ°ë¾¶£¬xÖá°ë¾¶ºÍyÖá°ë¾¶ */
 706            /* if(x0 > x1)
 707             {  radius_x = (x0 - x1) >> 1;
 708             }
 709             else
 710             {  radius_x = (x1 - x0) >> 1;
 711             }
 712             if(y0 > y1)
 713             {  radius_y = (y0 - y1) >> 1;
 714             }
 715             else
 716             {  radius_y = (y1 - y0) >> 1;
 717             }              */
 718                          
 719             /* ¼ÆËã°ë¾¶Æ½·½Öµ */
 720           /*  radius_xx = radius_x * radius_x;
 721             radius_yy = radius_y * radius_y;             */
 722                  
 723             /* ¼ÆËã°ë¾¶Æ½·½Öµ³Ë2Öµ */
 724           /*  radius_xx2 = radius_xx<<1;
 725             radius_yy2 = radius_yy<<1;  */
 726                  
 727             /* ³õÊ¼»¯»­Í¼±äÁ¿ */
 728           /*  xx = 0;
 729             yy = radius_y;
 730            
 731             di = radius_yy2 + radius_xx - radius_xx2*radius_y ;  // ³õÊ¼»¯¾ö²ß±äÁ¿ 
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 13  

 732                  
 733             /* ¼ÆËã³öÍÖÔ²yÖáÉÏµÄÁ½¸ö¶Ëµã×ø±ê£¬×÷Îª×÷Í¼Æðµã */
 734          /*   draw_x0 = draw_x1 = draw_x2 = draw_x3 = center_x;
 735             draw_y0 = draw_y1 = center_y + radius_y;
 736             draw_y2 = draw_y3 = center_y - radius_y;
 737            
 738                   
 739             lcd_set_dot(draw_x0, draw_y0);                                       // »­yÖáÉÏµÄÁ½¸ö¶Ëµã 
 740             lcd_set_dot(draw_x2, draw_y2);
 741                  
 742             while( (radius_yy*xx) < (radius_xx*yy) ) 
 743             {  if(di<0)
 744                    {  di+= radius_yy2*(2*xx+3);
 745                    }
 746                    else
 747                    {  di += radius_yy2*(2*xx+3) + 4*radius_xx - 4*radius_xx*yy;
 748                            
 749                       yy--;
 750                           draw_y0--;
 751                           draw_y1--;
 752                           draw_y2++;
 753                           draw_y3++;                              
 754                    }
 755                    
 756                    xx ++;                                                // xÖá¼Ó1
 757                                  
 758                    draw_x0++;
 759                    draw_x1--;
 760                    draw_x2++;
 761                    draw_x3--;
 762                          
 763                    lcd_set_dot(draw_x0, draw_y0);
 764                    lcd_set_dot(draw_x1, draw_y1);
 765                    lcd_set_dot(draw_x2, draw_y2);
 766                    lcd_set_dot(draw_x3, draw_y3);
 767             }
 768            
 769             di = radius_xx2*(yy-1)*(yy-1) + radius_yy2*xx*xx + radius_yy + radius_yy2*xx - radius_xx2*radius_yy;
 770             while(yy>=0) 
 771             {  if(di<0)
 772                    {  di+= radius_xx2*3 + 4*radius_yy*xx + 4*radius_yy - 2*radius_xx2*yy;
 773                            
 774                       xx ++;                                             // xÖá¼Ó1                       
 775                       draw_x0++;
 776                       draw_x1--;
 777                       draw_x2++;
 778                       draw_x3--;  
 779                    }
 780                    else
 781                    {  di += radius_xx2*3 - 2*radius_xx2*yy;                                                       
 782                    }
 783                    
 784                    yy--;
 785                    draw_y0--;
 786                    draw_y1--;
 787                    draw_y2++;
 788                    draw_y3++;    
 789                          
 790                    lcd_set_dot(draw_x0, draw_y0);
 791                    lcd_set_dot(draw_x1, draw_y1);
 792                    lcd_set_dot(draw_x2, draw_y2);
 793                    lcd_set_dot(draw_x3, draw_y3);
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 14  

 794             }     
 795          } */
 796          
 797          
 798          
 799          //*******************************************************************
 800          //*******»­ÂúÆÁÍ¼Æ¬-----±¾³ÌÐòÎªÖðÐÐÐ´£¬Òò´ËÍ¼Æ¬Êý¾ÝÒ²Ó¦¸ÃÊÇÖðÐÐÈ¡µÄ
 801          //²ÎÊý£ºdatÎªÌî³äµÄÊý¾Ý------ÓÃ±¾³ÌÐòÊ±ÐèÒªÂúÆÁÍ¼µÄÊý×é
 802          //*******************************************************************
 803          /*void gui_draw_full_picture (unsigned char *dat)
 804          { 
 805                  unsigned char i;                 
 806                  unsigned char j; 
 807                  unsigned char k; 
 808                  unsigned char bGDRAMAddrX = 0x80;               //GDRAMË®Æ½µØÖ· 
 809                  unsigned char bGDRAMAddrY = 0x80;               //GDRAM´¹Ö±µØÖ· 
 810                  for(i = 0; i < 2; i++)                                                                                                                
             -           
 811                  { 
 812                          for(j = 0; j < 32; j++)                                                                 
 813                          { 
 814                                  for(k = 0; k < 8; k++)                                                         
 815                                  { 
 816                                          write_com(0x34);                                //ÉèÖÃÎª8Î»MPU½Ó¿Ú£¬À©³äÖ¸Áî¼¯£¬¹Ø±Õ»æÍ¼ÏÔÊ¾
 817                                          write_com(bGDRAMAddrY+j);               //´¹Ö±µØÖ·Y                                                                
             -         
 818                                          write_com(bGDRAMAddrX+k);               //Ë®Æ½µØÖ·X 
 819                                          write_dat(*dat++);                      //Ð´Êý¾Ý¸ß×Ö½Ú
 820                                          write_dat(*dat++);                      //Ð´Êý¾ÝµÍ×Ö½Ú
 821                                  } 
 822                          } 
 823                          bGDRAMAddrX = 0x88;                                     //Ð´ÏÂ°ëÆÁÄ»
 824                  } 
 825                  write_com(0x36);                                                        //´ò¿ª»æÍ¼Ä£Ê½
 826                  write_com(0x30);                                                        //»Ö¸´»ù±¾Ö¸Áî¼¯£¬¹Ø±Õ»æÍ¼Ä£Ê½   
 827          }       */
 828          
 829          
 830          
 831          unsigned char code  DCB2HEX_TAB[8] = {0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01};
 832          //****************************Êä³öÒ»ÐÐÊý¾Ýº¯Êý£¬´ËÐÐ¿ÉÈÎÒâ³¤£¬²»±Ø·ÇµÃÊÇ8µÄ±¶Êý**ºÍÏÂ¸öº¯ÊýºÏÓÃ»­ÈÎÒâ´óÐ¡£
             -¨¾ØÐÎ£©µÄÍ¼ÐÎ»òºº×Ö                           
 833          //²ÎÊý£ºflag·´ÏÔ±êÖ¾£¬1Îª·´ÏÔ £¬x¡¢yÎªÖ¸¶¨ÏÔÊ¾Î»ÖÃµÄÆðÊ¼µã£¬*datÒªÊä³öµÄµãÕóÊý×é£¬noÏÔÊ¾´ËÐÐËùÐèµÄµã¸öÊý£¬
             -¼´Í¼ÐÎÒ»ÐÐµÄµãÊý
 834          void gui_loadline(unsigned char x,unsigned char y,unsigned char *dat,unsigned char no,unsigned char flag)
 835          {  
 836   1              unsigned char bit_dat;
 837   1              unsigned char i;
 838   1      
 839   1              /* ²ÎÊý¹ýÂË£¬ÈôÖ¸¶¨ÏÔÊ¾Î»ÖÃ³¬³öÒº¾§ÆÁÔò·µ»Ø */
 840   1              if(x>127) return;
 841   1              if(y>63) return;
 842   1         
 843   1              for(i=0; i<no; i++)//³¬³ö±¾ÐÐËù¹æ¶¨µÄµãÊýÔò±¾ÐÐÏÔÊ¾Íê³É
 844   1              {  
 845   2                      /* ÅÐ¶ÏÊÇ·ñÒª¶ÁÈ¡µãÕóÊý¾Ý£¬Ã¿×Ö½ÚµÄ¿ªÊ¼¶ÁÈ¡Ò»´ÎµãÕóÊý×é¼´iÎª8µÄ±¶ÊýÊ± */
 846   2                      if( (i%8)==0 ) bit_dat = *dat++;
 847   2           
 848   2                      /* ¶ÔÏàÓ¦µÄµã´ò1»ò´ò0£¬ i&0x07ÒâË¼ÊÇ¶Ô8ÇóÓà*/
 849   2                      if( (bit_dat&DCB2HEX_TAB[i&0x07])==0 )//È¡³öi¶ÔÓ¦µÄÎ»£¬²¢ÅÐ¶ÏÊÇ·ñÎª0 
 850   2                      {
 851   3                              if(flag==0)                             //ÅÐ¶ÏÊÇ·ñ·´ÏÔ£¬¸ÃÎ»È¡³öµÄÊý¾ÝÎª0£¬·´ÏÔÒª´òÎª1£¬flag==0´ú±í²»·´ÏÔ
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 15  

 852   3                                      GUI_Point(x,y,0);       //Õý³£ÏÔÊ¾0£¬GUI_Point(x,y,0)´ú±íÔÚx¡¢y´¦´ò0
 853   3                              else
 854   3                                      GUI_Point(x,y,1);       //½«0·´ÏÔ
 855   3                      }
 856   2                      else  
 857   2                      {
 858   3                              if(flag==0)
 859   3                                      GUI_Point(x,y,1); 
 860   3                              else
 861   3                                      GUI_Point(x,y,0); 
 862   3                      }                    
 863   2           
 864   2                      if( (++x)>127) return;//ÈôÏÔÊ¾³¬³öÁËÒº¾§ÆÁÔò·µ»Ø
 865   2         }
 866   1      }
 867          
 868          //***************************************************************************
 869          //*****************ÔÚ×Ô¶¨Òå´óÐ¡µÄÇøÓòÄÚ»­Í¼»ò»­×Öº¯Êý****************************
 870          //²ÎÊýËµÃ÷£º x¡¢yÖ¸¶¨ÏÔÊ¾ÇøÓòµÄÆðÊ¼µã×ø±ê
 871          //          dat ÒªÊä³öÏÔÊ¾µÄÍ¼ÐÎ»òºº×ÖµãÕóÊý×é¡£
 872          //          hno ÒªÏÔÊ¾ÇøÓòµÄ³¤¶È
 873          //          lno ÒªÏÔÊ¾ÇøÓòµÄ¸ß¶È
 874          //          flag·´ÏÔ±êÖ¾£¬1Îª·´ÏÔ
 875          //****************************************************************************
 876          void  GUI_Put_Area(unsigned char x,unsigned char y,unsigned char *dat,unsigned char hno,unsigned char lno,
             -unsigned char flag)
 877          {  
 878   1              unsigned char i;
 879   1      
 880   1              for(i=0;i<lno;i++)//ÖðÐÐ´òµã£¬´òµãÐÐÊýÒªÐ¡ÓÚÇøÓò¸ß¶È
 881   1              {  
 882   2                      gui_loadline(x,y,dat,hno,flag); // ´òÒ»ÐÐÊý¾Ý
 883   2                      y++;                                                    //Ê¹Ö¸ÕëÖ¸ÏòÏÂÒ»ÐÐ      
 884   2                      dat += (hno>>3);                                //±ÈÈçËµÉÏÒ»ÐÐ´òÁË2×Ö½Ú£¬´Ë´¦µÄÒâË¼ÊÇÊ¹Êý¾ÝÏòºóÍÆ½ø2×Ö½Ú£¬(hno>>3)ÒâË¼ÊÇËã³öÉÏÒ»ÐÐÓÐ
             -¼¸¸ö×Ö½ÚÊý¾Ý
 885   2                      if((hno&0x07)!=0) //hno&0x07ÒâË¼ÊÇ¶Ô8ÇóÓà£¬ÒòÒ»ÐÐ²»ÂúÕû×Ö½ÚÊ±£¬ÉÏÒ»¾äµÄÒâË¼¾ÍÊÇËã³öÉÏÒ»ÐÐµÄÕû×Ö½ÚÊý£¬µ«Ê
             -µ¼ÊÉÏÔÚÈ¡Ä£Ê±²»ÂúÒ»¸ö
 886   2                              dat++;            //×Ö½ÚÒ²°´Ò»¸ö×Ö½ÚÈ¡£¬ËùÒÔÉÏÒ»¾äÉÙ¼ÆËãÁËÒ»¸ö×Ö½Ú£¬ÕâÀï¼ÓÉÏ
 887   2              }
 888   1      }
 889          
 890          //*********************************************************************************ÒÔÉÏÎªGDRAM»æÍ¼²¿·Ö****
             -********************************************************************//
 891          
 892          
 893          
 894          //**********************************************************************************ÒÔÏÂÎªCGRAM×Ô¶¨Òå×Ö¿â²
             -¿·Ö******************************************************************//
 895          //********************************************************
 896          //ÉèÖÃCGRAM×Ö¿â
 897          //ST7920 CGRAM£¨ÓÃ»§×Ô¶¨ÒåÍ¼±ê£©¿Õ¼ä·Ö²¼
 898          //¿Õ¼ä1µØÖ·£º40H¡«4FH¹²16¸öµØÖ·£¬Ò»¸öµØÖ·¶ÔÓ¦Á½¸ö×Ö½ÚÊý¾Ý;¶ÔÓ¦µ÷ÓÃÂë:0000H
 899          //¿Õ¼ä2µØÖ·£º50H¡«5FH¹²16¸öµØÖ·£¬Ò»¸öµØÖ·¶ÔÓ¦Á½¸ö×Ö½ÚÊý¾Ý;¶ÔÓ¦µ÷ÓÃÂë:0002H
 900          //¿Õ¼ä3µØÖ·£º60H¡«6FH¹²16¸öµØÖ·£¬Ò»¸öµØÖ·¶ÔÓ¦Á½¸ö×Ö½ÚÊý¾Ý;¶ÔÓ¦µ÷ÓÃÂë:0004H
 901          //¿Õ¼ä4µØÖ·£º70H¡«7FH¹²16¸öµØÖ·£¬Ò»¸öµØÖ·¶ÔÓ¦Á½¸ö×Ö½ÚÊý¾Ý;¶ÔÓ¦µ÷ÓÃÂë:0006H
 902          //²ÎÊýËµÃ÷:numÎª¿Õ¼ä±àºÅ£¬È¡1¡¢2¡¢3¡¢4,CGRAM_ZIKUÎªµØÖ·Ö¸Õë
 903          //********************************************************
 904          /*void SET_CGRAM(unsigned char num,unsigned char *CGRAM_ZIKU)
 905          {
 906                  unsigned char i,add;
 907                  write_com(0x34);                                        //ÔÙ´ÎÉèÖÃÎª8Î»²¢ÐÐ¿Ú£¬À©Õ¹Ö¸Áî¼¯
 908                  write_com(0x02);                                        //SR=0,ÔÊÐíÉèÖÃCGRAMµØÖ·
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 16  

 909                  write_com(0x30);                                        //»Ö¸´ÉèÖÃÎª8Î»²¢ÐÐ¿Ú£¬»ù±¾Ö¸Áî¼¯
 910                  add=(num<<4)|0x40;                              //¼ÆËãCGRAMµÄÊ×µØÖ·
 911                  for(i=0;i<16;i++)
 912                  {
 913                          write_com(add+i);                               //ÉèÖÃCGRAMµÄÊ×µØÖ·
 914                          write_dat(CGRAM_ZIKU[i*2]);     //Ð´Èë¸ß8Î»Êý¾Ý
 915                          write_dat(CGRAM_ZIKU[i*2+1]);//Ð´ÈëµÍ8Î»Êý¾Ý
 916                  }
 917          }  */
 918          
 919          //********************************************************
 920          //Ö¸¶¨Î»ÖÃÏÔÊ¾CGRAM×ÔÔì×Öº¯Êý
 921          //²ÎÊýËµÃ÷£ºxÎªÐÐºÅ£¬yÎªÁÐºÅ£¬numÎª±àºÅ
 922          //********************************************************
 923          /*void display_CGRAM(unsigned char x,unsigned char y,unsigned char num)
 924          {
 925                  set_cursor(x,y);                                //ÉèÖÃÏÔÊ¾µÄÆðÊ¼µØÖ·
 926                  write_dat(0x00);                                        //Ð´ÈëÐèÒªÏÔÊ¾ºº×ÖµÄ¸ß°ËÎ»Êý¾Ý
 927                  write_dat(num*2);                               //Ð´ÈëÐèÒªÏÔÊ¾×Ö·ûµÄµÍ°ËÎ»Êý¾Ý
 928          }
 929          
 930          uchar code CGRAM_ZIKU[] = {0X03,0X80,0X00,0X80,0XF8,0X8E,0X23,0X91,0X22,0X21,0X22,0X20,0X23,0XA0,0X20,0X20
             -,
 931                                                                  0X20,0X20,0X20,0X20,0X20,0X20,0X20,0X21,0X20,0X11,0XF8,0X0E,0X00,0X00,0X00,0X00};//I2C
 932          
 933          */
 934          //**************ÉèÖÃCGRAM×Ö¿â²¢ÏÔÊ¾º¯Êý
 935          /*void set_and_display()
 936          {
 937                  SET_CGRAM( 1,CGRAM_ZIKU);//°Ñ×Ô¶¨Òå×Ö¿âÐ´ÈëCGRAM,ÇÒÐ´Èë¿Õ¼äµØÖ·1
 938                  display_CGRAM(0 , 1 , 1);//ÔÚÖ¸¶¨µÄÎ»ÖÃÏÔÊ¾¿Õ¼äµØÖ·1ÖÐ×Ô¶¨ÒåµÄ×Ö·û      
 939          }  */
 940          //***************************************************************************ÒÔÉÏÎª×Ô¶¨Òå×Ö¿â²¿·Ö*********
             -*****************************************************//
 941          
 942          
 943          
 944          
 945          
 946          //****************12864³õÊ¼»¯º¯Êý
 947          void lcd_init()
 948          {
 949   1              write_com(0x30);//»ù±¾Ö¸Áî²Ù×÷,8Î»²¢¿Ú
 950   1              delay(1);
 951   1              write_com(0x06);//ÉèÖÃÎªÓÎ±êÓÒÒÆ£¬DDRAMµØÖ·¼ÓÒ»£¬»­Ãæ²»¶¯
 952   1              delay(1);
 953   1              write_com(0x0c);//ÏÔÊ¾¿ª£¬¹Ø¹â±ê
 954   1              delay(1);
 955   1              write_com(0x01);//Çå³ýlcdÏÔÊ¾ÄÚÈÝ
 956   1              delay(1);
 957   1      }
 958          
 959          
 960          //*****************************Ö÷º¯Êý
 961          void main()
 962          {
 963   1              lcd_init();//12864³õÊ¼»¯º¯Êý
 964   1              gui_clear();//»­Í¼Ê±ÇåÆÁº¯Êý
 965   1              delay(10);
 966   1      //      set_and_display();//ÏÔÊ¾×Ô¶¨Òå×Ö¿â
 967   1      //      gui_circle( 86 , 32 , 10); //»­Ô²
 968   1              gui_linewith( 5 , 5 , 120 , 60 , 3);//»­Ö¸¶¨Ïß¿íÖ±Ïß
C51 COMPILER V9.00   12864                                                                 06/30/2013 13:26:40 PAGE 17  

 969   1      //      gui_ellipse(10 , 120 , 5 , 60);//»­ÕýÍÖÔ²
 970   1              while(1);
 971   1      }
 972          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1670    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      64
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
