C51 COMPILER V9.00   SPI                                                                   06/30/2013 13:33:22 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SPI
OBJECT MODULE PLACED IN SPI.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE SPI.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <SPI.h>
   2          /****************************************************************************************************
   3          /SPI单次时序数据交换
   4          /****************************************************************************************************/
   5                  sbit    MISO    =P1^5;
   6                  sbit    MOSI    =P1^1;
   7                  sbit    SCK         =P1^6;
   8                  sbit    CE          =P1^7;
   9                  sbit    CSN             =P1^2;
  10                  sbit    IRQ             =P1^0;
  11          uchar SPI_swapByte(uchar ch)
  12          {
  13   1              uchar i;
  14   1              for(i=0;i<8;i++) // output 8-bit
  15   1              {
  16   2                      MOSI = (ch & 0x80);           //输出ch当前位的数据至MOSI
  17   2                      ch = (ch << 1);               //ch左移。
  18   2                      SCK = 1;                 
  19   2                      ch |= MISO;                           //接收MISO的数据
  20   2                      SCK = 0;                
  21   2              }
  22   1          return(ch);
  23   1      }
  24          /****************************************************************************************************
  25          /SPI读取指定寄存器的值
  26          /****************************************************************************************************/
  27          uchar SPI_Read(uchar reg)
  28          {
  29   1              uchar val;
  30   1              
  31   1              CSN = 0;                // CSN low, initialize SPI communication...
  32   1              SPI_swapByte(reg);          //写寄存器的地址
  33   1              val = SPI_swapByte(0);    //读取寄存器
  34   1              CSN = 1;                // CSN high, terminate SPI communication
  35   1              
  36   1              return(val);        // return register value
  37   1      }
  38          /****************************************************************************************************/
  39          /*功能：SPI写指定寄存器函数
  40          /****************************************************************************************************/
  41          uchar SPI_Write(uchar reg, uchar val)
  42          {
  43   1              uchar status;
  44   1              
  45   1              CSN = 0;                   // CSN low, init SPI transaction
  46   1              status = SPI_swapByte(reg);      // select register
  47   1              SPI_swapByte(val);             // ..and write value to it..
  48   1              CSN = 1;                   // CSN high again
  49   1              
  50   1              return(status);            // return nRF24L01 status uchar
  51   1      }
  52          /****************************************************************************************************/
  53          /*功能: 用于读数据，reg：为寄存器地址，pBuf：为待读出数据地址，uchars：读出数据的个数
  54          /****************************************************************************************************/
  55          uchar SPI_Read_Buf(uchar reg, uchar *pBuf, uchar Buf_len)
C51 COMPILER V9.00   SPI                                                                   06/30/2013 13:33:22 PAGE 2   

  56          {
  57   1              uchar status,i;
  58   1              
  59   1              CSN = 0;                                // Set CSN low, init SPI tranaction
  60   1              status = SPI_swapByte(reg);                     // Select register to write to and read status uchar
  61   1              
  62   1              for(i=0;i<Buf_len;i++)
  63   1                      pBuf[i] = SPI_swapByte(0);      
  64   1              CSN = 1;                                
  65   1              return(status);                    // return nRF24L01 status uchar
  66   1      }
  67          uchar SPI_Write_Buf(uchar reg, uchar *pBuf, uchar Buf_len)
  68          {
  69   1              uint status,i;
  70   1              
  71   1              CSN = 0;            //SPI使能       
  72   1              status = SPI_swapByte(reg);   
  73   1              for(i=0; i<Buf_len; i++)
  74   1                      SPI_swapByte(*pBuf++);
  75   1              CSN = 1;           //关闭SPI
  76   1              return(status);
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    154    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
